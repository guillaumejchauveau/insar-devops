include: /.gitlab/common.yml

.backend-workflow-rules:
  - changes: [game-backend/**/*]

b:image-build:
  extends: .image-build-job
  needs: []
  rules: !reference [.backend-workflow-rules]
  variables:
    IMAGE_SUFFIX: game-backend
  before_script:
    - cd game-backend

b:image-scan:
  extends: .image-scan-job
  needs: [b:image-build]
  rules: !reference [b:image-build, rules]
  variables:
    IMAGE_SUFFIX: game-backend
  artifacts:
    expose_as: Backend image scan results

.maven-job:
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/maven:3.8-openjdk-11
  before_script:
    - cd game-backend
    - echo "mvn -B -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository --fail-at-end \$*" > ./mvnw
    - chmod +x ./mvnw
  cache:
    policy: pull
    key:
      files:
        - game-backend/pom.xml
    paths:
      - $CI_PROJECT_DIR/.m2/repository/

b:test:
  extends: .maven-job
  stage: test
  needs: []
  rules: !reference [.backend-workflow-rules]
  script: ./mvnw verify
  artifacts:
    when: always
    reports:
      junit: game-backend/target/surefire-reports/TEST-*.xml
    paths:
      - game-backend/target/site/jacoco/jacoco.xml
  cache:
    policy: pull-push

b:checkstyle:
  extends: .maven-job
  stage: test
  needs: []
  rules: !reference [.backend-workflow-rules]
  script: ./mvnw checkstyle:check
  artifacts:
    when: always
    paths:
      - game-backend/target/checkstyle-result.xml
    expire_in: 30min

b:spotbugs:
  extends: .maven-job
  stage: test
  needs: []
  rules: !reference [.backend-workflow-rules]
  script:
    - ./mvnw compile
    - ./mvnw spotbugs:check
  artifacts:
    when: always
    paths:
      - game-backend/target/spotbugsXml.xml
    expire_in: 30min

b:dependency-check:
  extends: .maven-job
  stage: test
  needs: []
  rules:
    - changes: [game-backend/pom.xml]
  script: ./mvnw dependency-check:check
  artifacts:
    when: always
    paths:
      - game-backend/target/dependency-check-junit.xml
    expose_as: Backend dependency check

b:report_jacoco:
  stage: report
  needs: [b:test]
  rules: !reference [b:test, rules]
  when: always
  allow_failure: true
  image: registry.gitlab.com/haynes/jacoco2cobertura:1.0.9
  before_script:
    - cd game-backend
  script: |
    python /opt/cover2cover.py \
      target/site/jacoco/jacoco.xml \
      $CI_PROJECT_DIR/game-backend/src/main/java/ \
      > cobertura-coverage.xml
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: game-backend/cobertura-coverage.xml

b:report_checkstyle:
  stage: report
  needs: [b:checkstyle]
  rules: !reference [b:checkstyle, rules]
  variables:
    GIT_STRATEGY: none
  when: always
  allow_failure: true
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/guillaumejchauveau/checkstyle-report-codeclimate
  before_script:
    - cd game-backend
  script: |
    cat target/checkstyle-result.xml \
      | python /opt/checkstyle-report-codeclimate.py \
      > gl-code-quality-report.json
  artifacts:
    reports:
      codequality: game-backend/gl-code-quality-report.json

b:report_spotbugs:
  stage: report
  needs: [b:spotbugs]
  rules: !reference [b:spotbugs, rules]
  variables:
    GIT_STRATEGY: none
  when: always
  allow_failure: true
  image: registry.gitlab.com/gitlab-org/security-products/analyzers/spotbugs:2
  before_script:
    - cd game-backend
  script: /analyzer convert target/spotbugsXml.xml > gl-sast-report.json
  artifacts:
    reports:
      sast: game-backend/gl-sast-report.json
