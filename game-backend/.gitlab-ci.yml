include: /.gitlab/common.yml

.b:workflow_rules:
  - changes: [game-backend/**/*]

b:build:
  extends: .build_job
  needs: []
  rules: !reference [.b:workflow_rules]
  variables:
    IMAGE_SUFFIX: game-backend
  before_script:
    - cd game-backend

b:container_scanning:
  extends: .container_scanning_job
  needs: [b:build]
  rules: !reference [b:build, rules]
  variables:
    IMAGE_SUFFIX: game-backend
  artifacts:
    expose_as: Backend container scanning

.maven_job:
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/maven:3.8-openjdk-11
  variables:
    MAVEN_OPTS: >-
      -Dhttps.protocols=TLSv1.2
      -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
      -Dorg.slf4j.simpleLogger.showDateTime=true
      -Djava.awt.headless=true
    MAVEN_ARGS: >-
      --batch-mode
      --errors
      --fail-at-end
      --show-version
      --no-transfer-progress
      -DinstallAtEnd=true
      -DdeployAtEnd=true
  before_script:
    - cd game-backend
  cache:
    policy: pull
    key:
      files:
        - game-backend/pom.xml
    paths:
      - $CI_PROJECT_DIR/.m2/repository/

b:test:
  extends: .maven_job
  stage: test
  needs: []
  rules: !reference [.b:workflow_rules]
  script: mvn $MAVEN_ARGS verify
  artifacts:
    when: always
    reports:
      junit: game-backend/target/surefire-reports/TEST-*.xml
    paths:
      - game-backend/target/site/jacoco/jacoco.xml
  cache:
    policy: pull-push

b:code_quality:
  extends: .maven_job
  stage: test
  needs: []
  rules: !reference [.b:workflow_rules]
  script: mvn $MAVEN_ARGS checkstyle:check
  artifacts:
    when: always
    paths:
      - game-backend/target/checkstyle-result.xml
    expire_in: 30min

b:sast:
  extends: .maven_job
  stage: test
  needs: []
  rules: !reference [.b:workflow_rules]
  script: mvn $MAVEN_ARGS compile spotbugs:check
  artifacts:
    when: always
    paths:
      - game-backend/target/spotbugsXml.xml
    expire_in: 30min

b:dependency_scanning:
  extends: .maven_job
  stage: test
  needs: []
  rules:
    - changes: [game-backend/pom.xml]
  script: mvn $MAVEN_ARGS dependency-check:check
  artifacts:
    when: always
    paths:
      - game-backend/target/dependency-check-report.html
    expose_as: Backend dependency scanning

b:test_coverage-report:
  stage: .post
  needs: [b:test]
  rules: !reference [b:test, rules]
  when: always
  allow_failure: true
  image: registry.gitlab.com/haynes/jacoco2cobertura:1.0.9
  before_script:
    - cd game-backend
  script: |
    python /opt/cover2cover.py \
      target/site/jacoco/jacoco.xml \
      $CI_PROJECT_DIR/game-backend/src/main/java/ \
      > cobertura-coverage.xml
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: game-backend/cobertura-coverage.xml

b:code_quality-report:
  stage: .post
  needs: [b:code_quality]
  rules: !reference [b:code_quality, rules]
  variables:
    GIT_STRATEGY: none
  when: always
  allow_failure: true
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/guillaumejchauveau/checkstyle-report-codeclimate
  before_script:
    - cd game-backend
  script: |
    cat target/checkstyle-result.xml \
      | python /opt/checkstyle-report-codeclimate.py \
      > gl-code-quality-report.json
  artifacts:
    reports:
      codequality: game-backend/gl-code-quality-report.json

b:sast-report:
  stage: .post
  needs: [b:sast]
  rules: !reference [b:sast, rules]
  variables:
    GIT_STRATEGY: none
  when: always
  allow_failure: true
  image: registry.gitlab.com/gitlab-org/security-products/analyzers/spotbugs:2
  before_script:
    - cd game-backend
  script: /analyzer convert target/spotbugsXml.xml > gl-sast-report.json
  artifacts:
    reports:
      sast: game-backend/gl-sast-report.json
