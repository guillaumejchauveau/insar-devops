apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-config
  namespace: monitoring
  labels:
    app.kubernetes.io/name: loki-config
    app.kubernetes.io/part-of: monitoring.ops
    app.kubernetes.io/component: configuration
data:
  local-config.yaml: |
    auth_enabled: false
    server:
      http_listen_port: 3100
    schema_config:
      configs:
        - from: 2021-08-01
          store: boltdb-shipper
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 24h
    common:
      path_prefix: /loki
      replication_factor: 1
      storage:
        filesystem:
          chunks_directory: /tmp/loki/chunks
          rules_directory: /tmp/loki/rules
      ring:
        kvstore:
          store: memberlist
    analytics:
      reporting_enabled: false
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: promtail-config
  namespace: monitoring
  labels:
    app.kubernetes.io/name: promtail-config
    app.kubernetes.io/part-of: monitoring.ops
    app.kubernetes.io/component: configuration
data:
  config.yml: |
    server:
      http_listen_port: 9080
      grpc_listen_port: 0

    positions:
      filename: /tmp/positions.yaml

    clients:
      - url: http://loki:3100/loki/api/v1/push

    scrape_configs:
      - job_name: kubernetes-pods
        pipeline_stages:
          - cri: {}
          - json:
              expressions:
                time: time
                log: log
          - timestamp:
              source: time
              format: RFC3339Nano
          - output:
              source: log
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_ops_logs_scrape]
            action: keep
            regex: true

          - source_labels: [__meta_kubernetes_pod_node_name]
            target_label: __host__
          - action: replace
            replacement: /var/log/pods/*$1/*.log
            separator: /
            source_labels:
              - __meta_kubernetes_pod_uid
              - __meta_kubernetes_pod_container_name
            target_label: __path__
          - action: replace
            replacement: /var/log/pods/*$1/*.log
            regex: true/(.*)
            separator: /
            source_labels:
              - __meta_kubernetes_pod_annotationpresent_kubernetes_io_config_hash
              - __meta_kubernetes_pod_annotation_kubernetes_io_config_hash
              - __meta_kubernetes_pod_container_name
            target_label: __path__

          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: pod
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  namespace: monitoring
  labels:
    app.kubernetes.io/name: loki
    app.kubernetes.io/part-of: monitoring.ops
    app.kubernetes.io/component: log-aggregation
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: loki
      app.kubernetes.io/part-of: monitoring.ops
  template:
    metadata:
      labels:
        app.kubernetes.io/name: loki
        app.kubernetes.io/part-of: monitoring.ops
      annotations:
        ops/logs.scrape: 'true'
        ops/metrics.scrape: 'true'
    spec:
      containers:
        - name: loki
          image: grafana/loki:2.7.0
          ports:
            - containerPort: 3100
              name: api
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /etc/loki/
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: api
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
      volumes:
        - name: config
          configMap:
            name: loki-config
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: promtail
  namespace: monitoring
  labels:
    app.kubernetes.io/name: promtail
    app.kubernetes.io/part-of: monitoring.ops
    app.kubernetes.io/component: log-ingestion
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: promtail
      app.kubernetes.io/part-of: monitoring.ops
  template:
    metadata:
      labels:
        app.kubernetes.io/name: promtail
        app.kubernetes.io/part-of: monitoring.ops
      annotations:
        ops/logs.scrape: 'true'
        ops/metrics.scrape: 'true'
    spec:
      containers:
        - name: promtail
          image: grafana/promtail:2.7.0
          args:
            - -server.enable-runtime-reload
            - -config.file=/etc/promtail/config.yml
          env:
            - name: 'HOSTNAME' # needed when using kubernetes_sd_configs
              valueFrom:
                fieldRef:
                  fieldPath: 'spec.nodeName'
          ports:
            - name: api
              containerPort: 9080
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /etc/promtail/
            - name: run
              mountPath: /run/promtail
            - name: containers
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: pods
              mountPath: /var/log/pods
              readOnly: true
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /ready
              port: api
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
        - name: configmap-reload
          image: jimmidyson/configmap-reload:v0.5.0
          args:
            - --volume-dir=/etc/config
            - --webhook-url=http://127.0.0.1:9080/reload
          volumeMounts:
            - name: config
              mountPath: /etc/config
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: promtail-config
        - name: run
          hostPath:
            path: /run/promtail
        - name: containers
          hostPath:
            path: /var/lib/docker/containers
        - name: pods
          hostPath:
            path: /var/log/pods
---
apiVersion: v1
kind: Service
metadata:
  name: loki
  namespace: monitoring
  labels:
    app.kubernetes.io/name: loki
    app.kubernetes.io/part-of: monitoring.ops
    app.kubernetes.io/component: log-aggregation
spec:
  ports:
    - name: api
      port: 3100
      targetPort: api
  selector:
    app.kubernetes.io/name: loki
    app.kubernetes.io/part-of: monitoring.ops
