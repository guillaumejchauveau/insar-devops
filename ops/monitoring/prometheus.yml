apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
  labels:
    app.kubernetes.io/name: prometheus-config
    app.kubernetes.io/part-of: monitoring.ops
    app.kubernetes.io/component: configuration
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    scrape_configs:
      - job_name: kubernetes-pods
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_ops_metrics_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_ops_metrics_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_ops_metrics_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__

          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: pod
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: monitoring.ops
    app.kubernetes.io/component: metric-aggregation
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/part-of: monitoring.ops
  template:
    metadata:
      labels:
        app.kubernetes.io/name: prometheus
        app.kubernetes.io/part-of: monitoring.ops
      annotations:
        ops/logs.scrape: 'true'
        ops/metrics.scrape: 'true'
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:v2.40.4
          args:
            - --config.file=/etc/prometheus/prometheus.yml
            - --enable-feature=exemplar-storage
            - --web.enable-remote-write-receiver
          ports:
            - containerPort: 9090
              name: http
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /etc/prometheus/
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
        - name: configmap-reload
          image: jimmidyson/configmap-reload:v0.5.0
          args:
            - --volume-dir=/etc/config
            - --webhook-url=http://127.0.0.1:9090/-/reload
          volumeMounts:
            - name: config
              mountPath: /etc/config
              readOnly: true
      volumes:
        - name: config
          configMap:
            defaultMode: 420
            name: prometheus-config
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: monitoring
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: monitoring.ops
    app.kubernetes.io/component: metric-aggregation
spec:
  ports:
    - name: http
      port: 9090
      targetPort: http
  selector:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: monitoring.ops
