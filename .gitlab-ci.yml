workflow:
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

stages:
  - build
  - test

variables:
  # Comment out if GitLab Dependency Proxy is available.
  CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX: $CI_REGISTRY_IMAGE

include:
  - game-backend/.gitlab-ci.yml
  - game-frontend/.gitlab-ci.yml

secret_detection:
  stage: test
  needs: []
  image: registry.gitlab.com/gitlab-org/security-products/analyzers/secrets:4
  script: /analyzer run
  artifacts:
    when: always
    reports:
      secret_detection: gl-secret-detection-report.json

# Mimic the GitLab Dependency Proxy if it is unavailable.
dependency_proxy:
  stage: .pre
  when: manual
  variables:
    IMAGES: >-
      maven:3.8-openjdk-11
      guillaumejchauveau/checkstyle-report-codeclimate
      guillaumejchauveau/node-chrome:14
      cypress/browsers:node14.19.0-chrome100-ff99-edge
    GIT_STRATEGY: none
  image: docker:20.10.12
  before_script:
    # Log into the GitLab Registry.
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"
  script: |
    for IMAGE in $IMAGES
    do
      docker pull $IMAGE
      docker tag $IMAGE ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/$IMAGE
      docker push ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/$IMAGE
    done
